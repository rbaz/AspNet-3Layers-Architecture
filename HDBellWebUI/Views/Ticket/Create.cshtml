@model HDBellData.ViewModels.TicketEditViewModel

@{
    ViewBag.Title = "Create";
}

@*<h2>Create</h2>*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Ticket</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">        
        @Html.Label(HDBellWebUI.App_LocalResources.ResTicket.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
        </div>
    </div>

    @*I remove this section. don't need. we affect datetime in the real time *@

    @*<div class="form-group">
            @Html.Label(HDBellWebUI.App_LocalResources.ResTicket.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TDateCreation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TDateCreation, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.Label(HDBellWebUI.App_LocalResources.ResTicket.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => Model.SelectedDepartmentCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(Model => Model.SelectedDepartmentCode, new SelectList(Model.Departments, "Value", "Text"), "Select", htmlAttributes: new { @class = "form-control", @id = "DepartmentDropdown" })
            @Html.ValidationMessageFor(x => x.SelectedDepartmentCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => Model.SelectedEmployeeCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(Model => Model.SelectedEmployeeCode, new SelectList(Model.Employees, "Value", "Text"), "Select", htmlAttributes: new { @class = "form-control", @id = "EmployeeDropdown" })
            @Html.ValidationMessageFor(x => x.SelectedEmployeeCode, "", new { @class = "text-danger" })
        </div>
    </div>    
    
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>

</div>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $('#DepartmentDropdown').change(function () {
            var selectedDepartment = $("#DepartmentDropdown").val();
            var employeesSelect = $('#EmployeeDropdown');
                employeesSelect.empty();
                if (selectedDepartment != null && selectedDepartment != '') {
                    $.getJSON('@Url.Action("GetEmployeeByDepartment")', { departmentId: selectedDepartment }, function (employees) {
                        if (employees != null && !jQuery.isEmptyObject(employees))
                        {
                            employeesSelect.append($('<option/>', {
                                value: null,
                                text: ""
                            }));
                            $.each(employees, function (index, employee) {
                                employeesSelect.append($('<option/>', {
                                    value: employee.Value,
                                    text: employee.Text
                                }));
                            });
                        };
                    });
                }
            });
    </script>

}


