@model HDBellData.Models.Ticket

@{
    ViewBag.Title = "Create";
}

@*<h2>Create</h2>*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Ticket</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @*@Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })*@
        @Html.Label(HDBellWebUI.App_LocalResources.ResTicket.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
        </div>
    </div>

    @*I remove this section. don't need. we affect datetime in the real time *@

    @*<div class="form-group">
            @Html.Label(HDBellWebUI.App_LocalResources.ResTicket.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TDateCreation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TDateCreation, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.Label(HDBellWebUI.App_LocalResources.ResTicket.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(HDBellWebUI.App_LocalResources.ResTicket.Department, "DepartmentId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("DepartmentId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(HDBellWebUI.App_LocalResources.ResTicket.Employee, "EmployeeId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("EmployeeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")  

    <script>
        function getEmployeeList() {
            debugger;
            var stateId = $("#departmentDropDown").val();
            $.ajax
                ({
                    url: '/Home/GetEmployeeList',
                    type: 'POST',
                    datatype: 'application/json',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        departmentId: +departmentId
                    }),
                    success: function (result) {
                        $("#employeeDropDown").html("");
                        $.each($.parseJSON(result), function (i, employee) {
                            $("#employeeDropDown").append($('<option></option>').val(employee.EmployeeId).html(employee.Name))
                        })

                    },
                    error: function () {
                        alert("Whooaaa! Something went wrong..")
                    },
                });
        }
    </script>

}


